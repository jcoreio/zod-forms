"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2896],{5088:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var o=n(6070),s=n(5710);const i={sidebar_position:1},t="Requirements and Disclaimers",d={id:"disclaimers",title:"Requirements and Disclaimers",description:"Environment",source:"@site/docs/disclaimers.md",sourceDirName:".",slug:"/disclaimers",permalink:"/zod-forms/docs/disclaimers",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/disclaimers.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebar",previous:{title:"Quickstart",permalink:"/zod-forms/docs/quickstart"},next:{title:"Concepts",permalink:"/zod-forms/docs/concepts"}},c={},a=[{value:"Environment",id:"environment",level:2},{value:"Designed for Zod and React only",id:"designed-for-zod-and-react-only",level:2},{value:"Not currently designed for super high performance",id:"not-currently-designed-for-super-high-performance",level:2}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h1,{id:"requirements-and-disclaimers",children:"Requirements and Disclaimers"}),"\n",(0,o.jsx)(r.h2,{id:"environment",children:"Environment"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"@jcoreio/zod-form"})," may require certain ECMAScript features to be polyfilled depending on your environment."]}),"\n",(0,o.jsx)(r.h2,{id:"designed-for-zod-and-react-only",children:"Designed for Zod and React only"}),"\n",(0,o.jsxs)(r.p,{children:["Other projects like ",(0,o.jsx)(r.a,{href:"https://react-hook-form.com/",children:(0,o.jsx)(r.code,{children:"react-hook-form"})})," are designed to integrate with a wide\nvariety of validation libraries. ",(0,o.jsx)(r.code,{children:"@jcoreio/zod"})," form will always require ",(0,o.jsx)(r.code,{children:"zod"})," schemas, to provide the\nsmoothest integration when using ",(0,o.jsx)(r.code,{children:"zod"}),"."]}),"\n",(0,o.jsx)(r.h2,{id:"not-currently-designed-for-super-high-performance",children:"Not currently designed for super high performance"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"https://final-form.org/",children:(0,o.jsx)(r.code,{children:"final-form"})})," uses granular field subscriptions to minimize work in large forms.\nAlthough ",(0,o.jsx)(r.code,{children:"@jcoreio/zod-form"})," does its best to avoid unnecessary rerendering, it currently parses the entire\nform values with your schema when any field is changed."]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"https://react-hook-form.com/",children:(0,o.jsx)(r.code,{children:"react-hook-form"})})," uses uncontrolled components by default to get maximum\nperformance in large forms."]})]})}function m(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},5710:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>d});var o=n(758);const s={},i=o.createContext(s);function t(e){const r=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(i.Provider,{value:r},e.children)}}}]);