"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7525],{710:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var o=n(6070),t=n(5710);const s={},i="Show Submit Errors",c={id:"howto/show-submit-errors",title:"Show Submit Errors",description:"On Specific Fields",source:"@site/docs/howto/show-submit-errors.md",sourceDirName:"howto",slug:"/howto/show-submit-errors",permalink:"/zod-forms/docs/howto/show-submit-errors",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/howto/show-submit-errors.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Reusable Field Components",permalink:"/zod-forms/docs/howto/reusable-field-components"},next:{title:"API Reference",permalink:"/zod-forms/docs/api/"}},u={},d=[{value:"On Specific Fields",id:"on-specific-fields",level:2},{value:"Getting the Overall Error",id:"getting-the-overall-error",level:2}];function a(e){const r={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h1,{id:"show-submit-errors",children:"Show Submit Errors"}),"\n",(0,o.jsx)(r.h2,{id:"on-specific-fields",children:"On Specific Fields"}),"\n",(0,o.jsxs)(r.p,{children:["To show errors on specific fields when submit fails, throw/reject with a ",(0,o.jsx)(r.code,{children:"ZodError"})," from your ",(0,o.jsx)(r.code,{children:"onSubmit"})," handler.\nAny issues on the ",(0,o.jsx)(r.code,{children:"ZodError"})," will be distributed to your field components by issue ",(0,o.jsx)(r.code,{children:"path"})," (just like errors thrown\nby your form schema when parsing)."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-tsx",children:"import { createZodForm } from '@jcoreio/zod-forms'\nimport z from 'zod'\n\nconst form = createZodForm({\n  schema: z.object({\n    email: z.string(),\n  }),\n})\n\nfunction SignUpForm() {\n  const { onSubmit } = form.useSubmit({\n    onSubmit: async (values) => {\n      try {\n        await createUser(values)\n      } catch (error) {\n        if (error.code === 'ALREADY_EXISTS') {\n          throw new z.ZodError([\n            {\n              code: z.ZodIssueCode.custom,\n              path: ['email'],\n              message: 'Email address already in use',\n            },\n          ])\n        }\n      }\n    },\n  })\n\n  return (\n    <form onSubmit={onSubmit}>\n      <FormTextField\n        label=\"Email Address\"\n        type=\"email\"\n        field={form.get('email')}\n      />\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  )\n}\n"})}),"\n",(0,o.jsx)(r.h2,{id:"getting-the-overall-error",children:"Getting the Overall Error"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"useFormStatus"})," returns a ",(0,o.jsx)(r.code,{children:"submitError"})," property that has the ",(0,o.jsx)(r.code,{children:"Error"})," when submit failed:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-tsx",children:"import { useFormStatus } from '@jcoreio/zod-forms'\n\nfunction SubmitStatusBanner() {\n  const { submitting, submitFailed, submitSucceeded, submitError } =\n    useFormStatus()\n\n  if (submitting) return <LoadingAlert>Submitting...</LoadingAlert>\n  if (submitFailed) {\n    return (\n      <ErrorAlert>\n        Submit failed:{' '}\n        {submitError instanceof Error\n          ? submitError.message\n          : String(submitError)}\n      </ErrorAlert>\n    )\n  }\n  if (submitSucceeded) {\n    return <SuccessAlert>Submit Succeeded!</SuccessAlert>\n  }\n  return null\n}\n"})})]})}function l(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},5710:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>c});var o=n(758);const t={},s=o.createContext(t);function i(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);